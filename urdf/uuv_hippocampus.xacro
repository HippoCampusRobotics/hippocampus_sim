<?xml version="1.0"?>

<robot name="uuv_hippocampus" xmlns:xacro="http://www.ros.org/wiki/xacro">

    <!-- include vehicle properties -->
    <xacro:include filename="$(find hippocampus_sim)/urdf/uuv_hippocampus_properties.xacro" />
    <xacro:include filename="$(find hippocampus_sim)/urdf/rotor.xacro" />

    <gazebo>
        <!-- gazebo is handling the dynamic behaviour of this model -->
        <static>0</static>
    </gazebo>

    <!-- vehicle ID to be appended to all frame/link/joint names -->
    <xacro:arg name="ID" default="0" />
    <xacro:property name="ID" value="$(arg ID)" />

    <!-- ports -->
    <xacro:arg name="mavlink_udp_port" default="14560" />
    <xacro:arg name="mavlink_tcp_port" default="4560" />

    <!-- Base Link -->
    <link name="base_link_${ID}">
        <inertial>
            <mass value="${baseLinkMass}" />
            <xacro:insert_block name="baseLinkInertia"/>
        </inertial>

        <visual>
            <geometry>
                <!-- <mesh filename="model://uuv_hippocampus/meshes/uuv_hippocampus.stl" scale="1 1 1"/> -->
                <mesh filename="package://hippocampus_sim/models/uuv_hippocampus/meshes/uuv_hippocampus.stl" scale="1 1 1" />
            </geometry>
        </visual>
    </link>
    <gazebo reference="base_link_${ID}">
        <material>Gazebo/Grey</material>
        <!-- <dampingFactor>0.1</dampingFactor>   arbitrary value for now, todo: default value for velocity_decay? -->
        <velocity_decay />        
    </gazebo>

    <!-- Rotor Links, Joints, Plugins -->
    <xacro:rotor number="0"></xacro:rotor>
    <xacro:rotor number="1"></xacro:rotor>
    <xacro:rotor number="2"></xacro:rotor>
    <xacro:rotor number="3"></xacro:rotor>


    <!-- Barometer Joint -->
    <!-- <joint name="barometer_water_joint_${ID}" type="fixed">
        <parent link="base_link_${ID}"/>
        <child link="barometer_water_link_${ID}"/>
        <xacro:insert_block name="baroLinkOrigin"/>
    </joint>
    <gazebo reference="barometer_water_joint_${ID}">
        <use_parent_model_frame>1</use_parent_model_frame>
    </gazebo> -->

    <!-- Barometer Link -->
    <!-- <link name="barometer_water_link_${ID}">
        <inertial>
            <mass value="${baroLinkMass}" />
            <xacro:insert_block name="baroLinkInertia"/>
        </inertial>
        <visual>
            <geometry>
                <cylinder radius="0.0125" length="0.02"/>
            </geometry>
        </visual>
    </link>
    <gazebo reference="barometer_water_link_${ID}">
        <material>Gazebo/Orange</material>
    </gazebo> -->

    <!-- Barometer Plugin Water -->
    <!-- Doesn't work currently? -->
    <!-- <gazebo>
        <plugin name="barometer_water_plugin_${ID}" filename="libgazebo_barometer_water_plugin.so">
            <robotNamespace />
            <pubRate>50</pubRate>
            <baroTopic>baro_water_${ID}</baroTopic>
            <noise>100</noise>
        </plugin>
    </gazebo> -->

    <!-- Barometer Plugin Standard -->
    <gazebo>
        <plugin name='barometer_plugin_${ID}' filename='libgazebo_barometer_plugin.so'>
            <robotNamespace />
            <pubRate>50</pubRate>
            <baroTopic>/baro_${ID}</baroTopic>
        </plugin>
    </gazebo>

    <!-- Magnetometer Plugin -->
    <gazebo>
        <plugin name='magnetometer_plugin_${ID}' filename='libgazebo_magnetometer_plugin.so'>
            <robotNamespace />
            <pubRate>100</pubRate>
            <noiseDensity>0.0004</noiseDensity>
            <randomWalk>6.4e-06</randomWalk>
            <biasCorrelationTime>600</biasCorrelationTime>
            <magTopic>/mag_${ID}</magTopic>
        </plugin>
    </gazebo>

    <!-- GPS, cannot include sdf models in urdf files -->
    <!-- <gazebo>
        <include>
            <uri>package://px4/Tools/sitl_gazebo/models/gps/gps.sdf</uri>
            <pose>0 0 0 0 0 0</pose>
            <name>gps_${ID}</name>
        </include>
    </gazebo>
    <joint name='gps_joint' type='fixed'>
        <child link="gps_${ID}::link"/>
        <parent link="base_link_${ID}"/>
    </joint> -->


    <!-- Camera Joint -->
    <joint name="vertical_camera_${ID}/camera_joint" type="fixed">
        <child link="vertical_camera_${ID}/camera_link"/>
        <parent link="base_link_${ID}"/>
        <xacro:insert_block name="cameraOrigin"/>
    </joint>
    <gazebo reference="vertical_camera_${ID}/camera_joint">
        <use_parent_model_frame>1</use_parent_model_frame>
    </gazebo>

    <!-- Camera Link -->
    <link name="vertical_camera_${ID}/camera_link">
        <inertial>
            <mass value="${cameraLinkMass}"/>
            <xacro:insert_block name="cameraLinkInertia"/>
        </inertial>
    </link>
    <gazebo reference="vertical_camera_${ID}/camera_link">
        <sensor type="camera" name="vertical_camera_${ID}">
            <update_rate>30.0</update_rate>
            <visualize>true</visualize>
            <always_on>0</always_on>
            <camera name="head">
                <horizontal_fov>2.0</horizontal_fov>
                <image>
                    <width>640</width>
                    <height>480</height>
                    <format>R8G8B8</format>
                </image>
                <clip>
                    <near>0.08</near>
                    <far>300</far>
                </clip>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.1</stddev>
                </noise>
            </camera>
            <plugin name="camera_controller_${ID}" filename="libgazebo_ros_camera.so">
                <alwaysOn>false</alwaysOn>
                <updateRate>0</updateRate>
                <cameraName>vertical_camera_${ID}</cameraName>
                <imageTopicName>image_raw</imageTopicName>
                <cameraInfoTopicName>camera_info</cameraInfoTopicName>
                <frameName>vertical_camera_${ID}/camera_frame</frameName>
                <hackBaseline>0</hackBaseline>
                <distortionK1>0.0</distortionK1>
                <distortionK2>0.0</distortionK2>
                <distortionK3>0.0</distortionK3>
                <distortionT1>0.0</distortionT1>
                <distortionT2>0.0</distortionT2>
            </plugin>
        </sensor>
    </gazebo>

    <!-- IMU joint -->
    <joint name="imu_joint_${ID}" type="revolute">  <!-- in sdf file revolute -> sonst passieren angeblich schlimme dinge in gazbeo-->
        <child link="imu_link_${ID}"/>
        <parent link="base_link_${ID}"/>
        <axis xyz="1 0 0"/>
        <limit lower="0" upper="0" effort="0" velocity="0"/>
    </joint>
    <gazebo reference="imu_joint_${ID}">
        <use_parent_model_frame>1</use_parent_model_frame>
    </gazebo>

    <!-- IMU Link -->
    <link name="imu_link_${ID}">
        <inertial>
            <mass value="${imuLinkMass}" />
            <xacro:insert_block name="imuLinkInertia"/>
        </inertial>
    </link>

    <!-- Gazebo IMU Plugin -->
    <gazebo>
        <plugin name='gazebo_imu_plugin_${ID}' filename='libgazebo_imu_plugin.so'>
            <robotNamespace />
            <linkName>imu_link_${ID}</linkName>
            <imuTopic>/imu_${ID}</imuTopic>
            <gyroscopeNoiseDensity>0.0003394</gyroscopeNoiseDensity>
            <gyroscopeRandomWalk>3.8785e-05</gyroscopeRandomWalk>
            <gyroscopeBiasCorrelationTime>1000.0</gyroscopeBiasCorrelationTime>
            <gyroscopeTurnOnBiasSigma>0.0087</gyroscopeTurnOnBiasSigma>
            <accelerometerNoiseDensity>0.004</accelerometerNoiseDensity>
            <accelerometerRandomWalk>0.006</accelerometerRandomWalk>
            <accelerometerBiasCorrelationTime>300.0</accelerometerBiasCorrelationTime>
            <accelerometerTurnOnBiasSigma>0.196</accelerometerTurnOnBiasSigma>
        </plugin>
    </gazebo>
    
    <!-- UUV Plugin to take care of hydrodynamic forces -->
    <gazebo>
        <plugin name='uuv_forces' filename='libgazebo_uuv_plugin.so'>
            <buoyancy>
                <link_name>base_link_${ID}</link_name>
                <origin>0 0 0.01</origin>
                <compensation>1.01</compensation>
                <height_scale_limit>0.05</height_scale_limit>
            </buoyancy>
            <robotNamespace />
            <baseLinkName>base_link_${ID}</baseLinkName>
            <addedMassLinear>1.11 2.8 2.8</addedMassLinear>
            <addedMassAngular>0.00451 0.0163 0.0163</addedMassAngular>
            <dampingLinear>5.39 17.36 17.36</dampingLinear>
            <dampingAngular>0.00114 0.007 0.007</dampingAngular>
            <commandSubTopic>/gazebo/command/motor_speed</commandSubTopic>
        </plugin>    
    </gazebo>
    
    <gazebo>
        <plugin name="ground_truth_${ID}" filename="libgazebo_ros_p3d.so">
            <alwaysOn>true</alwaysOn>
            <updateRate>30.0</updateRate>
            <bodyName>base_link_${ID}</bodyName>
            <topicName>ground_truth/vehicle_${ID}/state</topicName>
            <gaussianNoise>0.0</gaussianNoise>
            <frameName>map</frameName>
            <xyzOffsets>0 0 0</xyzOffsets>
            <rpyOffsets>0 0 0</rpyOffsets>
        </plugin>
    </gazebo>
    
    <!-- <gazebo>
        <plugin name='groundtruth_plugin' filename='libgazebo_groundtruth_plugin.so'>
            <robotNamespace />
        </plugin>
    </gazebo> -->

    <gazebo>
        <plugin name='mavlink_interface_${ID}' filename='libgazebo_mavlink_interface.so'>
            <robotNamespace />
            <imuSubTopic>/imu_${ID}</imuSubTopic>
            <magSubTopic>/mag_${ID}</magSubTopic>
            <baroSubTopic>/baro_${ID}</baroSubTopic>
            <mavlink_addr>INADDR_ANY</mavlink_addr>
            <mavlink_udp_port>$(arg mavlink_udp_port)</mavlink_udp_port>
            <mavlink_tcp_port>$(arg mavlink_tcp_port)</mavlink_tcp_port>
            <serialEnabled>0</serialEnabled>
            <serialDevice>/dev/ttyACM0</serialDevice>
            <baudRate>921600</baudRate>
            <qgc_addr>INADDR_ANY</qgc_addr>
            <qgc_udp_port>14550</qgc_udp_port>
            <sdk_addr>INADDR_ANY</sdk_addr>
            <sdk_udp_port>14540</sdk_udp_port>
            <hil_mode>false</hil_mode>
            <hil_state_level>false</hil_state_level>
            <send_vision_estimation>true</send_vision_estimation>
            <send_odometry>false</send_odometry>
            <enable_lockstep>true</enable_lockstep>
            <use_tcp>true</use_tcp>
            <motorSpeedCommandPubTopic>/gazebo/command/motor_speed</motorSpeedCommandPubTopic>
    
            <!-- control channels, this way for every channel different settings can be realized -->
            <control_channels>
                <channel name='rotor1'>
                    <input_index>0</input_index>
                    <input_offset>0</input_offset>
                    <input_scaling>800</input_scaling>
                    <zero_position_disarmed>0</zero_position_disarmed>
                    <zero_position_armed>0</zero_position_armed>
                    <joint_control_type>velocity</joint_control_type>
                    <joint_name>top_port_motor_joint</joint_name>
                </channel>
                <channel name='rotor2'>
                    <input_index>1</input_index>
                    <input_offset>0</input_offset>
                    <input_scaling>800</input_scaling>
                    <zero_position_disarmed>0</zero_position_disarmed>
                    <zero_position_armed>0</zero_position_armed>
                    <joint_control_type>velocity</joint_control_type>
                    <joint_name>top_starboard_joint</joint_name>
                </channel>
                <channel name='rotor3'>
                    <input_index>2</input_index>
                    <input_offset>0</input_offset>
                    <input_scaling>800</input_scaling>
                    <zero_position_disarmed>0</zero_position_disarmed>
                    <zero_position_armed>0</zero_position_armed>
                    <joint_control_type>velocity</joint_control_type>
                    <joint_name>bottom_starboard_joint</joint_name>
                </channel>
                <channel name='rotor4'>
                    <input_index>3</input_index>
                    <input_offset>0</input_offset>
                    <input_scaling>800</input_scaling>
                    <zero_position_disarmed>0</zero_position_disarmed>
                    <zero_position_armed>0</zero_position_armed>
                    <joint_control_type>velocity</joint_control_type>
                    <joint_name>bottom_port_joint</joint_name>
                </channel>
            </control_channels>
        </plugin>
    </gazebo>
    

</robot>