<?xml version="1.0"?>
<sdf version="1.6">

    <model name="uuv_hippocampus">
        <!-- gazebo is handling the dynamic behaviour of this model -> 0 -->
        <static>0</static>  <!-- 1: ignore physics for now for debugging-->

        <!-- uuv 1 --> 
        <link name="uuv00/base_link">

            <pose>0 0 0 0 0 0</pose>
            <inertial>
                <pose>0 0 0 0 0 0</pose>
                <!--
            These values are a compromise between the dry mass and added mass
            values used to correct for hydrodynamic effects.
            Real values:  m = 1,47 kg; Ixx = 0,002408 kgm2; Iyy = Izz = 0.010717 kgm2
                        Xu = -1,11 kg; Yv = Zw = -2,8 kg; Kp = -0,00451 kgm2; Mq = Nr = -0,0163 kgm2

            No gravity since weight and draft force are assumed to be equal for the hippocampus uuv
        -->
                <mass>1.47</mass>
                <inertia>
                    <ixx>0.0024</ixx>
                    <ixy>0</ixy>
                    <ixz>0</ixz>
                    <iyy>0.010717</iyy>
                    <iyz>0</iyz>
                    <izz>0.010717</izz>
                </inertia>
            </inertial>
            <visual name="uuv00/base_link_inertia_visual">
                <pose>0 0 0 0 0 0</pose>
                <geometry>
                    <mesh>
                        <scale>1 1 1</scale>
                        <uri>model://uuv_hippocampus/meshes/uuv_hippocampus.stl</uri>
                    </mesh>
                </geometry>
                <material>
                    <script>
                        <name>Gazebo/Grey</name>
                        <uri>file://media/materials/scripts/gazebo.material</uri>
                    </script>
                </material>
            </visual>
            <velocity_decay />
        </link>

        <!-- Water baro plugin doesn't work currently? -->
        <!-- <link name="uuv00/barometer_water_link">
            <pose>0 0 -0.05 0 0 0</pose>
            <inertial>
                <mass>0.001</mass>
                <inertia>
                    <ixx>1e-8</ixx>
                    <ixy>0</ixy>
                    <ixz>0</ixz>
                    <iyy>1e-8</iyy>
                    <iyz>0</iyz>
                    <izz>1e-8</izz>
                </inertia>
            </inertial>
            <visual name="uuv00/barometer_water_visual">
                <geometry>
                    <cylinder>
                        <radius>0.0125</radius>
                        <length>0.02</length>
                    </cylinder>
                </geometry>
                <material>
                    <script>
                        <uri>file://media/materials/scripts/gazebo.material</uri>
                        <name>Gazebo/Orange</name>
                    </script>
                </material>
            </visual>
        </link> -->
        
        <!-- <plugin name="uuv00/baro_water" filename="libgazebo_barometer_water_plugin.so">
            <pubRate>50</pubRate>
            <baroTopic>baro</baroTopic>
            <noise>100</noise>
        </plugin> -->

        <!-- <joint name="uuv00/barometer_water_joint" type="fixed">
            <parent>uuv00/base_link</parent>
            <child>uuv00/barometer_water_link</child>
        </joint> -->

        <!-- <link name="uuv00/vertical_camera/camera_link">
            <gravity>0</gravity>
            <pose>0.05 0 -0.02 0 1.57 0</pose>
            <inertial>
                <mass>0.001</mass>
                <inertia>
                    <ixx>1e-8</ixx>
                    <ixy>0</ixy>
                    <ixz>0</ixz>
                    <iyy>1e-8</iyy>
                    <iyz>0</iyz>
                    <izz>1e-8</izz>
                </inertia>
            </inertial>
            <sensor type="camera" name="camera_1">
                <update_rate>30.0</update_rate>
                <visualize>true</visualize>
                <always_on>0</always_on>
                <camera name="head">
                    <horizontal_fov>2.0</horizontal_fov>
                    <image>
                        <width>640</width>
                        <height>480</height>
                        <format>R8G8B8</format>
                    </image>
                    <clip>
                        <near>0.08</near>
                        <far>300</far>
                    </clip>
                    <noise>
                        <type>gaussian</type>
                        <mean>0.0</mean>
                        <stddev>0.1</stddev>
                    </noise>
                </camera>
                <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
                    <alwaysOn>false</alwaysOn>
                    <updateRate>0</updateRate>
                    <cameraName>vertical_camera</cameraName>
                    <imageTopicName>image_raw</imageTopicName>
                    <cameraInfoTopicName>camera_info</cameraInfoTopicName>
                    <frameName>vertical_camera/camera_frame</frameName>
                    <hackBaseline>0</hackBaseline>
                    <distortionK1>0.0</distortionK1>
                    <distortionK2>0.0</distortionK2>
                    <distortionK3>0.0</distortionK3>
                    <distortionT1>0.0</distortionT1>
                    <distortionT2>0.0</distortionT2>
                </plugin>
            </sensor>
        </link>

        <joint name="uuv00/camera_joint" type="fixed">
            <parent>uuv00/base_link</parent>
            <child>uuv00/vertical_camera/camera_link</child>
        </joint> -->

        <!--
        A new link is defined which hold the IMU (e.g. acceleration sensors, ...). For the simulation it is positioned
        at the center of the Hippocampus.
        The orientation of the IMU is chosen in regard to the orientation of the Body coordinate system of the
        HippoCampus. PX4 uses the data from the IMU to calculate the orientation. Therefore PX4 assumes a NED (North-
        East-Down) coordinate frame whereas Gazebo uses a ENU (East-North-Up) coordinate frame.
    -->
        <!-- IMU link -->
        <link name='uuv00/imu_link'>
            <pose>0 0 0 0 0 0</pose>
            <inertial>
                <pose>0 0 0 0 0 0</pose>
                <mass>0.015</mass>
                <inertia>
                    <ixx>1e-05</ixx>
                    <ixy>0</ixy>
                    <ixz>0</ixz>
                    <iyy>1e-05</iyy>
                    <iyz>0</iyz>
                    <izz>1e-05</izz>
                </inertia>
            </inertial>
        </link>

        <!-- IMU joint -->
        <joint name='uuv00/imu_joint' type='revolute'>
            <child>uuv00/imu_link</child>
            <parent>uuv00/base_link</parent>
            <axis>
                <xyz>1 0 0</xyz>
                <limit>
                    <lower>0</lower>
                    <upper>0</upper>
                    <effort>0</effort>
                    <velocity>0</velocity>
                </limit>
                <dynamics>
                    <spring_reference>0</spring_reference>
                    <spring_stiffness>0</spring_stiffness>
                </dynamics>
                <use_parent_model_frame>1</use_parent_model_frame> <!-- in older sdf versions, the axis unit vector was expressed in the parent link's model frame, now it is expressed in joint frame, this tag replicates old behaviour -->
            </axis>
        </joint>

        <!--
    Now the rotors are defined on which the forces and moments attack. They are positioned relative to the center
    of the Hippocampus. Also a collision cylinder will be defined for each rotor to reduce computation time.
-->
        <!-- CCW 1-->
        <!-- rotor_0 link -->
        <link name='uuv00/rotor_0'>
            <pose>-0.05 0.0481 0.0481 0 1.570796 0</pose>
            <inertial>
                <pose>0 0 0 0 -0 0</pose>
                <mass>0.005</mass>
                <inertia>
                    <ixx>9.75e-07</ixx>
                    <ixy>0</ixy>
                    <ixz>0</ixz>
                    <iyy>0.000273104</iyy>
                    <iyz>0</iyz>
                    <izz>0.000274004</izz>
                </inertia>
            </inertial>
            <visual name='uuv00/rotor_0_visual'>
                <pose>0 0 0 0 -1.570796 0</pose>
                <geometry>
                    <mesh>
                        <scale>1 1 1</scale>
                        <uri>model://uuv_hippocampus/meshes/uuv_hippocampus_prop.stl</uri>
                    </mesh>
                </geometry>
                <material>
                    <script>
                        <name>Gazebo/Red</name>
                        <uri>file://media/materials/scripts/gazebo.material</uri>
                    </script>
                </material>
            </visual>
            <velocity_decay />
        </link>

        <!-- rotor_0 joint -->
        <joint name='uuv00/rotor_0_joint' type='revolute'>
            <parent>uuv00/base_link</parent>
            <child>uuv00/rotor_0</child>
            <axis>
                <xyz>1 0 0</xyz>
                <limit>
                    <lower>-1e+16</lower>
                    <upper>1e+16</upper>
                </limit>
                <dynamics>
                    <spring_reference>0</spring_reference>
                    <spring_stiffness>0</spring_stiffness>
                </dynamics>
                <use_parent_model_frame>1</use_parent_model_frame>
            </axis>
        </joint>

        <!-- CW 2 -->
        <!-- rotor_1 link -->
        <link name='uuv00/rotor_1'>
            <pose>-0.05 -0.0481 0.0481 0 1.570796 0</pose>
            <inertial>
                <pose>0 0 0 0 -0 0</pose>
                <mass>0.005</mass>
                <inertia>
                    <ixx>9.75e-07</ixx>
                    <ixy>0</ixy>
                    <ixz>0</ixz>
                    <iyy>0.000273104</iyy>
                    <iyz>0</iyz>
                    <izz>0.000274004</izz>
                </inertia>
            </inertial>
            <visual name='uuv00/rotor_1_visual'>
                <pose>0 0 0 0 -1.570796 0</pose>
                <geometry>
                    <mesh>
                        <scale>1 1 1</scale>
                        <uri>model://uuv_hippocampus/meshes/uuv_hippocampus_prop.stl</uri>
                    </mesh>
                </geometry>
                <material>
                    <script>
                        <name>Gazebo/Green</name>
                        <uri>file://media/materials/scripts/gazebo.material</uri>
                    </script>
                </material>
            </visual>
            <velocity_decay />
        </link>

        <!-- rotor_1 joint -->
        <joint name='uuv00/rotor_1_joint' type='revolute'>
            <child>uuv00/rotor_1</child>
            <parent>uuv00/base_link</parent>
            <axis>
                <xyz>1 0 0</xyz>
                <limit>
                    <lower>-1e+16</lower>
                    <upper>1e+16</upper>
                </limit>
                <dynamics>
                    <spring_reference>0</spring_reference>
                    <spring_stiffness>0</spring_stiffness>
                </dynamics>
                <use_parent_model_frame>1</use_parent_model_frame>
            </axis>
        </joint>

        <!-- CCW 3 -->
        <!-- rotor_2 link -->
        <link name='uuv00/rotor_2'>
            <pose>-0.05 -0.0481 -0.0481 0 1.570796 0</pose>
            <inertial>
                <pose>0 0 0 0 -0 0</pose>
                <mass>0.005</mass>
                <inertia>
                    <ixx>9.75e-07</ixx>
                    <ixy>0</ixy>
                    <ixz>0</ixz>
                    <iyy>0.000273104</iyy>
                    <iyz>0</iyz>
                    <izz>0.000274004</izz>
                </inertia>
            </inertial>
            <visual name='uuv00/rotor_2_visual'>
                <pose>0 0 0 0 -1.570796 0</pose>
                <geometry>
                    <mesh>
                        <scale>1 1 1</scale>
                        <uri>model://uuv_hippocampus/meshes/uuv_hippocampus_prop.stl</uri>
                    </mesh>
                </geometry>
                <material>
                    <script>
                        <name>Gazebo/Blue</name>
                        <uri>file://media/materials/scripts/gazebo.material</uri>
                    </script>
                </material>
            </visual>
            <velocity_decay />
        </link>

        <!-- rotor_2 joint -->
        <joint name='uuv00/rotor_2_joint' type='revolute'>
            <child>uuv00/rotor_2</child>
            <parent>uuv00/base_link</parent>
            <axis>
                <xyz>1 0 0</xyz>
                <limit>
                    <lower>-1e+16</lower>
                    <upper>1e+16</upper>
                </limit>
                <dynamics>
                    <spring_reference>0</spring_reference>
                    <spring_stiffness>0</spring_stiffness>
                </dynamics>
                <use_parent_model_frame>1</use_parent_model_frame>
            </axis>
        </joint>

        <!-- CW 4 -->
        <!-- rotor_3 link -->
        <link name='uuv00/rotor_3'>
            <pose>-0.05 0.0481 -0.0481 0 1.570796 0</pose>
            <inertial>
                <pose>0 0 0 0 -0 0</pose>
                <mass>0.005</mass>
                <inertia>
                    <ixx>9.75e-07</ixx>
                    <ixy>0</ixy>
                    <ixz>0</ixz>
                    <iyy>0.000273104</iyy>
                    <iyz>0</iyz>
                    <izz>0.000274004</izz>
                </inertia>
            </inertial>
            <visual name='uuv00/rotor_3_visual'>
                <pose>0 0 0 0 -1.570796 0</pose>
                <geometry>
                    <mesh>
                        <scale>1 1 1</scale>
                        <uri>model://uuv_hippocampus/meshes/uuv_hippocampus_prop.stl</uri>
                    </mesh>
                </geometry>
                <material>
                    <script>/rotor_${number}
                        <name>Gazebo/Blue</name>
                        <uri>file://media/materials/scripts/gazebo.material</uri>
                    </script>
                </material>
            </visual>
            <velocity_decay />
        </link>

        <!-- rotor_3 joint -->
        <joint name='uuv00/rotor_3_joint' type='revolute'>
            <child>uuv00/rotor_3</child>
            <parent>uuv00/base_link</parent>
            <axis>
                <xyz>1 0 0</xyz>
                <limit>
                    <lower>-1e+16</lower>
                    <upper>1e+16</upper>
                </limit>
                <dynamics>
                    <spring_reference>0</spring_reference>
                    <spring_stiffness>0</spring_stiffness>
                </dynamics>
                <use_parent_model_frame>1</use_parent_model_frame>
            </axis>
        </joint>

        <!-- GPS -->
        <!-- <include>
            <uri>model://gps</uri>
            <pose>0 0 0 0 0 0</pose>
            <name>gps</name>
        </include>
        <joint name='gps_joint' type='fixed'>
            <child>gps::link</child>
            <parent>base_link</parent>
        </joint> -->

        <!-- Plugins -->

        <plugin name="ground_truth/uuv00" filename="libgazebo_ros_p3d.so">
            <alwaysOn>true</alwaysOn>
            <updateRate>30.0</updateRate>
            <bodyName>uuv00/base_link</bodyName>
            <topicName>ground_truth/uuv00/state</topicName>
            <gaussianNoise>0.0</gaussianNoise>
            <frameName>map</frameName>
            <xyzOffsets>0 0 0</xyzOffsets>
            <rpyOffsets>0 0 0</rpyOffsets>
        </plugin>

        <plugin name='uuv00/groundtruth_plugin' filename='libgazebo_groundtruth_plugin.so'>
            <robotNamespace />
        </plugin>

        <plugin name='uuv00/uuv_forces' filename='libgazebo_uuv_plugin.so'>
            <buoyancy>
                <link_name>uuv00/base_link</link_name>
                <origin>0 0 0.01</origin>
                <compensation>1.01</compensation>
                <height_scale_limit>0.05</height_scale_limit>
            </buoyancy>
            <robotNamespace />
            <baseLinkName>uuv00/base_link</baseLinkName>
            <addedMassLinear>1.11 2.8 2.8</addedMassLinear>
            <addedMassAngular>0.00451 0.0163 0.0163</addedMassAngular>
            <dampingLinear>5.39 17.36 17.36</dampingLinear>
            <dampingAngular>0.00114 0.007 0.007</dampingAngular>
            <commandSubTopic>/gazebo/command/uuv00/motor_speed</commandSubTopic>
        </plugin>

        <plugin name='uuv00/top_port_motor_model' filename='libgazebo_motor_model.so'>
            <robotNamespace />
            <reversible>true</reversible>
            <jointName>uuv00/rotor_0_joint</jointName>
            <linkName>uuv00/rotor_0</linkName>
            <turningDirection>ccw</turningDirection>
            <timeConstantUp>0.0125</timeConstantUp>
            <timeConstantDown>0.025</timeConstantDown>
            <maxRotVelocity>800</maxRotVelocity>
            <motorConstant>1.1e-05</motorConstant>
            <momentConstant>0.0024</momentConstant>
            <rotorDragCoefficient>0.0</rotorDragCoefficient>
            <rollingMomentCoefficient>0.0</rollingMomentCoefficient>
            <commandSubTopic>/gazebo/command/uuv00/motor_speed</commandSubTopic>
            <motorNumber>0</motorNumber>
            <motorSpeedPubTopic>/motor_speed/0</motorSpeedPubTopic>
            <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
        </plugin>
        <plugin name='uuv00/top_starboard_motor_model' filename='libgazebo_motor_model.so'>
            <robotNamespace />
            <reversible>true</reversible>
            <jointName>uuv00/rotor_1_joint</jointName>
            <linkName>uuv00/rotor_1</linkName>
            <turningDirection>cw</turningDirection>
            <timeConstantUp>0.0125</timeConstantUp>
            <timeConstantDown>0.025</timeConstantDown>
            <maxRotVelocity>800</maxRotVelocity>
            <motorConstant>-1.1e-05</motorConstant>
            <momentConstant>0.0024</momentConstant>
            <rotorDragCoefficient>0.0</rotorDragCoefficient>
            <rollingMomentCoefficient>0.0</rollingMomentCoefficient>
            <commandSubTopic>/gazebo/command/uuv00/motor_speed</commandSubTopic>
            <motorNumber>1</motorNumber>
            <motorSpeedPubTopic>/motor_speed/1</motorSpeedPubTopic>
            <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
        </plugin>
        <plugin name='uuv00/bottom_starboard_motor_model' filename='libgazebo_motor_model.so'>
            <robotNamespace />
            <reversible>true</reversible>
            <jointName>uuv00/rotor_2_joint</jointName>
            <linkName>uuv00/rotor_2</linkName>
            <turningDirection>ccw</turningDirection>
            <timeConstantUp>0.0125</timeConstantUp>
            <timeConstantDown>0.025</timeConstantDown>
            <maxRotVelocity>800</maxRotVelocity>
            <motorConstant>1.1e-05</motorConstant>
            <momentConstant>0.0024</momentConstant>
            <rotorDragCoefficient>0.0</rotorDragCoefficient>
            <rollingMomentCoefficient>0.0</rollingMomentCoefficient>
            <commandSubTopic>/gazebo/command/uuv00/motor_speed</commandSubTopic>
            <motorNumber>2</motorNumber>
            <motorSpeedPubTopic>/motor_speed/2</motorSpeedPubTopic>
            <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
        </plugin>
        <plugin name='uuv00/bottom_port_motor_model' filename='libgazebo_motor_model.so'>
            <robotNamespace />
            <reversible>true</reversible>
            <jointName>uuv00/rotor_3_joint</jointName>
            <linkName>uuv00/rotor_3</linkName>
            <turningDirection>cw</turningDirection>
            <timeConstantUp>0.0125</timeConstantUp>
            <timeConstantDown>0.025</timeConstantDown>
            <maxRotVelocity>800</maxRotVelocity>
            <motorConstant>-1.1e-05</motorConstant>
            <momentConstant>0.0024</momentConstant>
            <rotorDragCoefficient>0.0</rotorDragCoefficient>
            <rollingMomentCoefficient>0.0</rollingMomentCoefficient>
            <commandSubTopic>/gazebo/command/uuv00/motor_speed</commandSubTopic>
            <motorNumber>3</motorNumber>
            <motorSpeedPubTopic>/motor_speed/3</motorSpeedPubTopic>
            <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
        </plugin>

        <plugin name='uuv00/magnetometer_plugin' filename='libgazebo_magnetometer_plugin.so'>
            <robotNamespace />
            <pubRate>100</pubRate>
            <noiseDensity>0.0004</noiseDensity>
            <randomWalk>6.4e-06</randomWalk>
            <biasCorrelationTime>600</biasCorrelationTime>
            <magTopic>uuv00/mag</magTopic>
        </plugin>

        <plugin name='uuv00/barometer_plugin' filename='libgazebo_barometer_plugin.so'>
            <robotNamespace />
            <pubRate>50</pubRate>
            <baroTopic>uuv00/baro</baroTopic>
        </plugin>

        <plugin name='uuv00/mavlink_interface' filename='libgazebo_mavlink_interface.so'>
            <robotNamespace />
            <imuSubTopic>uuv00/imu</imuSubTopic>
            <magSubTopic>uuv00/mag</magSubTopic>
            <baroSubTopic>uuv00/baro</baroSubTopic>
            <mavlink_addr>INADDR_ANY</mavlink_addr>
            <mavlink_udp_port>14560</mavlink_udp_port>
            <mavlink_tcp_port>4560</mavlink_tcp_port>
            <serialEnabled>0</serialEnabled>
            <serialDevice>/dev/ttyACM0</serialDevice>
            <baudRate>921600</baudRate>
            <qgc_addr>INADDR_ANY</qgc_addr>
            <qgc_udp_port>14550</qgc_udp_port>
            <sdk_addr>INADDR_ANY</sdk_addr>
            <sdk_udp_port>14540</sdk_udp_port>
            <hil_mode>false</hil_mode>
            <hil_state_level>false</hil_state_level>
            <send_vision_estimation>true</send_vision_estimation>
            <send_odometry>false</send_odometry>
            <enable_lockstep>true</enable_lockstep>
            <use_tcp>true</use_tcp>
            <motorSpeedCommandPubTopic>/gazebo/command/uuv00/motor_speed</motorSpeedCommandPubTopic>

            <!-- control channels, this way for every channel different settings can be realized -->
            <control_channels>
                <channel name='rotor1'>
                    <input_index>0</input_index>
                    <input_offset>0</input_offset>
                    <input_scaling>800</input_scaling>
                    <zero_position_disarmed>0</zero_position_disarmed>
                    <zero_position_armed>0</zero_position_armed>
                    <joint_control_type>velocity</joint_control_type>
                    <joint_name>top_port_motor_joint</joint_name>
                </channel>
                <channel name='rotor2'>
                    <input_index>1</input_index>
                    <input_offset>0</input_offset>
                    <input_scaling>800</input_scaling>
                    <zero_position_disarmed>0</zero_position_disarmed>
                    <zero_position_armed>0</zero_position_armed>
                    <joint_control_type>velocity</joint_control_type>
                    <joint_name>top_starboard_joint</joint_name>
                </channel>
                <channel name='rotor3'>
                    <input_index>2</input_index>
                    <input_offset>0</input_offset>
                    <input_scaling>800</input_scaling>
                    <zero_position_disarmed>0</zero_position_disarmed>
                    <zero_position_armed>0</zero_position_armed>
                    <joint_control_type>velocity</joint_control_type>
                    <joint_name>bottom_starboard_joint</joint_name>
                </channel>
                <channel name='rotor4'>
                    <input_index>3</input_index>
                    <input_offset>0</input_offset>
                    <input_scaling>800</input_scaling>
                    <zero_position_disarmed>0</zero_position_disarmed>
                    <zero_position_armed>0</zero_position_armed>
                    <joint_control_type>velocity</joint_control_type>
                    <joint_name>bottom_port_joint</joint_name>
                </channel>
            </control_channels>
        </plugin>

        <plugin name='uuv00/gazebo_imu_plugin' filename='libgazebo_imu_plugin.so'>
            <robotNamespace />
            <linkName>uuv00/imu_link</linkName>
            <imuTopic>uuv00/imu</imuTopic>
            <gyroscopeNoiseDensity>0.0003394</gyroscopeNoiseDensity>
            <gyroscopeRandomWalk>3.8785e-05</gyroscopeRandomWalk>
            <gyroscopeBiasCorrelationTime>1000.0</gyroscopeBiasCorrelationTime>
            <gyroscopeTurnOnBiasSigma>0.0087</gyroscopeTurnOnBiasSigma>
            <accelerometerNoiseDensity>0.004</accelerometerNoiseDensity>
            <accelerometerRandomWalk>0.006</accelerometerRandomWalk>
            <accelerometerBiasCorrelationTime>300.0</accelerometerBiasCorrelationTime>
            <accelerometerTurnOnBiasSigma>0.196</accelerometerTurnOnBiasSigma>
        </plugin>
        <!-- ende hippo 1 -->
    

        <!-- uuv 2 -->
        <link name="uuv01/base_link">

            <pose>-0.5 0 0 0 0 0</pose>
            <inertial>
                <pose>0 0 0 0 0 0</pose>
                <!--
            These values are a compromise between the dry mass and added mass
            values used to correct for hydrodynamic effects.
            Real values:  m = 1,47 kg; Ixx = 0,002408 kgm2; Iyy = Izz = 0.010717 kgm2
                        Xu = -1,11 kg; Yv = Zw = -2,8 kg; Kp = -0,00451 kgm2; Mq = Nr = -0,0163 kgm2

            No gravity since weight and draft force are assumed to be equal for the hippocampus uuv
        -->
                <mass>1.47</mass>
                <inertia>
                    <ixx>0.0024</ixx>
                    <ixy>0</ixy>
                    <ixz>0</ixz>
                    <iyy>0.010717</iyy>
                    <iyz>0</iyz>
                    <izz>0.010717</izz>
                </inertia>
            </inertial>
            <visual name="uuv01/base_link_inertia_visual">
                <pose>0 0 0 0 0 0</pose>
                <geometry>
                    <mesh>
                        <scale>1 1 1</scale>
                        <uri>model://uuv_hippocampus/meshes/uuv_hippocampus.stl</uri>
                    </mesh>
                </geometry>
                <material>
                    <script>
                        <name>Gazebo/Grey</name>
                        <uri>file://media/materials/scripts/gazebo.material</uri>
                    </script>
                </material>
            </visual>
            <velocity_decay />
        </link>

        <!-- <link name="uuv01/vertical_camera/camera_link">
            <gravity>0</gravity>
            <pose>0.05 0 -0.02 0 1.57 0</pose>
            <inertial>
                <mass>0.001</mass>
                <inertia>
                    <ixx>1e-8</ixx>
                    <ixy>0</ixy>
                    <ixz>0</ixz>
                    <iyy>1e-8</iyy>
                    <iyz>0</iyz>
                    <izz>1e-8</izz>
                </inertia>
            </inertial>
            <sensor type="camera" name="camera_2">
                <update_rate>30.0</update_rate>
                <visualize>true</visualize>
                <always_on>0</always_on>
                <camera name="head">
                    <horizontal_fov>2.0</horizontal_fov>
                    <image>
                        <width>640</width>
                        <height>480</height>
                        <format>R8G8B8</format>
                    </image>
                    <clip>
                        <near>0.08</near>
                        <far>300</far>
                    </clip>
                    <noise>
                        <type>gaussian</type>
                        <mean>0.0</mean>
                        <stddev>0.1</stddev>
                    </noise>
                </camera>
                <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
                    <alwaysOn>false</alwaysOn>
                    <updateRate>0</updateRate>
                    <cameraName>vertical_camera</cameraName>
                    <imageTopicName>image_raw</imageTopicName>
                    <cameraInfoTopicName>camera_info</cameraInfoTopicName>
                    <frameName>vertical_camera/camera_frame</frameName>
                    <hackBaseline>0</hackBaseline>
                    <distortionK1>0.0</distortionK1>
                    <distortionK2>0.0</distortionK2>
                    <distortionK3>0.0</distortionK3>
                    <distortionT1>0.0</distortionT1>
                    <distortionT2>0.0</distortionT2>
                </plugin>
            </sensor>
        </link>

        <joint name="uuv01/camera_joint" type="fixed">
            <parent>uuv01/base_link</parent>
            <child>uuv01/vertical_camera/camera_link</child>
        </joint> -->

        <!--
        A new link is defined which hold the IMU (e.g. acceleration sensors, ...). For the simulation it is positioned
        at the center of the Hippocampus.
        The orientation of the IMU is chosen in regard to the orientation of the Body coordinate system of the
        HippoCampus. PX4 uses the data from the IMU to calculate the orientation. Therefore PX4 assumes a NED (North-
        East-Down) coordinate frame whereas Gazebo uses a ENU (East-North-Up) coordinate frame.
    -->
        <!-- IMU link -->
        <link name='uuv01/imu_link'>    <!-- Might need an additional relative_to=""... -->
            <pose relative_to="uuv01/base_link">0 0 0 0 0 0</pose>
            <inertial>
                <pose relative_to="uuv01/base_link">0 0 0 0 0 0</pose>
                <mass>0.015</mass>
                <inertia>
                    <ixx>1e-05</ixx>
                    <ixy>0</ixy>
                    <ixz>0</ixz>
                    <iyy>1e-05</iyy>
                    <iyz>0</iyz>
                    <izz>1e-05</izz>
                </inertia>
            </inertial>
        </link>

        <!-- IMU joint -->
        <joint name='uuv01/imu_joint' type='revolute'>
            <child>uuv01/imu_link</child>
            <parent>uuv01/base_link</parent>
            <axis>
                <xyz>1 0 0</xyz>
                <limit>
                    <lower>0</lower>
                    <upper>0</upper>
                    <effort>0</effort>
                    <velocity>0</velocity>
                </limit>
                <dynamics>
                    <spring_reference>0</spring_reference>
                    <spring_stiffness>0</spring_stiffness>
                </dynamics>
                <use_parent_model_frame>1</use_parent_model_frame> <!-- in older sdf versions, the axis unit vector was expressed in the parent link's model frame, now it is expressed in joint frame, this tag replicates old behaviour -->
            </axis>
        </joint>

        <!--
    Now the rotors are defined on which the forces and moments attack. They are positioned relative to the center
    of the Hippocampus. Also a collision cylinder will be defined for each rotor to reduce computation time.
-->
        <!-- CCW 1-->
        <!-- rotor_0 link -->
        <link name='uuv01/rotor_0'>
            <pose relative_to="uuv01/base_link">-0.05 0.0481 0.0481 0 1.570796 0</pose>
            <inertial>
                <pose>0 0 0 0 -0 0</pose>
                <mass>0.005</mass>
                <inertia>
                    <ixx>9.75e-07</ixx>
                    <ixy>0</ixy>
                    <ixz>0</ixz>
                    <iyy>0.000273104</iyy>
                    <iyz>0</iyz>
                    <izz>0.000274004</izz>
                </inertia>
            </inertial>
            <visual name='uuv01/rotor_0_visual'>
                <pose>0 0 0 0 -1.570796 0</pose>
                <geometry>
                    <mesh>
                        <scale>1 1 1</scale>
                        <uri>model://uuv_hippocampus/meshes/uuv_hippocampus_prop.stl</uri>
                    </mesh>
                </geometry>
                <material>
                    <script>
                        <name>Gazebo/Red</name>
                        <uri>file://media/materials/scripts/gazebo.material</uri>
                    </script>
                </material>
            </visual>
            <velocity_decay />
        </link>

        <!-- rotor_0 joint -->
        <joint name='uuv01/rotor_0_joint' type='revolute'>
            <parent>uuv01/base_link</parent>
            <child>uuv01/rotor_0</child>
            <axis>
                <xyz>1 0 0</xyz>
                <limit>
                    <lower>-1e+16</lower>
                    <upper>1e+16</upper>
                </limit>
                <dynamics>
                    <spring_reference>0</spring_reference>
                    <spring_stiffness>0</spring_stiffness>
                </dynamics>
                <use_parent_model_frame>1</use_parent_model_frame>
            </axis>
        </joint>

        <!-- CW 2 -->
        <!-- rotor_1 link -->
        <link name='uuv01/rotor_1'>
            <pose relative_to="uuv01/base_link">-0.05 -0.0481 0.0481 0 1.570796 0</pose>
            <inertial>
                <pose>0 0 0 0 -0 0</pose>
                <mass>0.005</mass>
                <inertia>
                    <ixx>9.75e-07</ixx>
                    <ixy>0</ixy>
                    <ixz>0</ixz>
                    <iyy>0.000273104</iyy>
                    <iyz>0</iyz>
                    <izz>0.000274004</izz>
                </inertia>
            </inertial>
            <visual name='uuv01/rotor_1_visual'>
                <pose>0 0 0 0 -1.570796 0</pose>
                <geometry>
                    <mesh>
                        <scale>1 1 1</scale>
                        <uri>model://uuv_hippocampus/meshes/uuv_hippocampus_prop.stl</uri>
                    </mesh>
                </geometry>
                <material>
                    <script>
                        <name>Gazebo/Green</name>
                        <uri>file://media/materials/scripts/gazebo.material</uri>
                    </script>
                </material>
            </visual>
            <velocity_decay />
        </link>

        <!-- rotor_1 joint -->
        <joint name='uuv01/rotor_1_joint' type='revolute'>
            <child>uuv01/rotor_1</child>
            <parent>uuv01/base_link</parent>
            <axis>
                <xyz>1 0 0</xyz>
                <limit>
                    <lower>-1e+16</lower>
                    <upper>1e+16</upper>
                </limit>
                <dynamics>
                    <spring_reference>0</spring_reference>
                    <spring_stiffness>0</spring_stiffness>
                </dynamics>
                <use_parent_model_frame>1</use_parent_model_frame>
            </axis>
        </joint>

        <!-- CCW 3 -->
        <!-- rotor_2 link -->
        <link name='uuv01/rotor_2'>
            <pose relative_to="uuv01/base_link">-0.05 -0.0481 -0.0481 0 1.570796 0</pose>
            <inertial>
                <pose>0 0 0 0 -0 0</pose>
                <mass>0.005</mass>
                <inertia>
                    <ixx>9.75e-07</ixx>
                    <ixy>0</ixy>
                    <ixz>0</ixz>
                    <iyy>0.000273104</iyy>
                    <iyz>0</iyz>
                    <izz>0.000274004</izz>
                </inertia>
            </inertial>
            <visual name='uuv01/rotor_2_visual'>
                <pose >0 0 0 0 -1.570796 0</pose>
                <geometry>
                    <mesh>
                        <scale>1 1 1</scale>
                        <uri>model://uuv_hippocampus/meshes/uuv_hippocampus_prop.stl</uri>
                    </mesh>
                </geometry>
                <material>
                    <script>
                        <name>Gazebo/Blue</name>
                        <uri>file://media/materials/scripts/gazebo.material</uri>
                    </script>
                </material>
            </visual>
            <velocity_decay />
        </link>

        <!-- rotor_2 joint -->
        <joint name='uuv01/rotor_2_joint' type='revolute'>
            <child>uuv01/rotor_2</child>
            <parent>uuv01/base_link</parent>
            <axis>
                <xyz>1 0 0</xyz>
                <limit>
                    <lower>-1e+16</lower>
                    <upper>1e+16</upper>
                </limit>
                <dynamics>
                    <spring_reference>0</spring_reference>
                    <spring_stiffness>0</spring_stiffness>
                </dynamics>
                <use_parent_model_frame>1</use_parent_model_frame>
            </axis>
        </joint>

        <!-- CW 4 -->
        <!-- rotor_3 link -->
        <link name='uuv01/rotor_3'>
            <pose relative_to="uuv01/base_link">-0.05 0.0481 -0.0481 0 1.570796 0</pose>
            <inertial>
                <pose>0 0 0 0 -0 0</pose>
                <mass>0.005</mass>
                <inertia>
                    <ixx>9.75e-07</ixx>
                    <ixy>0</ixy>
                    <ixz>0</ixz>
                    <iyy>0.000273104</iyy>
                    <iyz>0</iyz>
                    <izz>0.000274004</izz>
                </inertia>
            </inertial>
            <visual name='uuv01/rotor_3_visual'>
                <pose>0 0 0 0 -1.570796 0</pose>
                <geometry>
                    <mesh>
                        <scale>1 1 1</scale>
                        <uri>model://uuv_hippocampus/meshes/uuv_hippocampus_prop.stl</uri>
                    </mesh>
                </geometry>
                <material>
                    <script>/rotor_${number}
                        <name>Gazebo/Blue</name>
                        <uri>file://media/materials/scripts/gazebo.material</uri>
                    </script>
                </material>
            </visual>
            <velocity_decay />
        </link>

        <!-- rotor_3 joint -->
        <joint name='uuv01/rotor_3_joint' type='revolute'>
            <child>uuv01/rotor_3</child>
            <parent>uuv01/base_link</parent>
            <axis>
                <xyz>1 0 0</xyz>
                <limit>
                    <lower>-1e+16</lower>
                    <upper>1e+16</upper>
                </limit>
                <dynamics>
                    <spring_reference>0</spring_reference>
                    <spring_stiffness>0</spring_stiffness>
                </dynamics>
                <use_parent_model_frame>1</use_parent_model_frame>
            </axis>
        </joint>

        <!-- GPS -->
        <!-- <include>
            <uri>model://gps</uri>
            <pose>0 0 0 0 0 0</pose>
            <name>gps</name>
        </include>
        <joint name='gps_joint' type='fixed'>
            <child>gps::link</child>
            <parent>base_link</parent>
        </joint> -->

        <!-- Plugins -->

        <plugin name="ground_truth/uuv01" filename="libgazebo_ros_p3d.so">
            <alwaysOn>true</alwaysOn>
            <updateRate>30.0</updateRate>
            <bodyName>uuv01/base_link</bodyName>
            <topicName>ground_truth/uuv01/state</topicName>
            <gaussianNoise>0.0</gaussianNoise>
            <frameName>map</frameName>
            <xyzOffsets>0 0 0</xyzOffsets>
            <rpyOffsets>0 0 0</rpyOffsets>
        </plugin>

        <plugin name='uuv01/groundtruth_plugin' filename='libgazebo_groundtruth_plugin.so'>
            <robotNamespace />
        </plugin>

        <plugin name='uuv01/uuv_forces' filename='libgazebo_uuv_plugin.so'>
            <buoyancy>
                <link_name>uuv01/base_link</link_name>
                <origin>0 0 0.01</origin>
                <compensation>1.01</compensation>
                <height_scale_limit>0.05</height_scale_limit>
            </buoyancy>
            <robotNamespace />
            <baseLinkName>uuv01/base_link</baseLinkName>
            <addedMassLinear>1.11 2.8 2.8</addedMassLinear>
            <addedMassAngular>0.00451 0.0163 0.0163</addedMassAngular>
            <dampingLinear>5.39 17.36 17.36</dampingLinear>
            <dampingAngular>0.00114 0.007 0.007</dampingAngular>
            <commandSubTopic>/gazebo/command/uuv01/motor_speed</commandSubTopic>
        </plugin>

        <plugin name='uuv01/top_port_motor_model' filename='libgazebo_motor_model.so'>
            <robotNamespace />
            <reversible>true</reversible>
            <jointName>uuv01/rotor_0_joint</jointName>
            <linkName>uuv01/rotor_0</linkName>
            <turningDirection>ccw</turningDirection>
            <timeConstantUp>0.0125</timeConstantUp>
            <timeConstantDown>0.025</timeConstantDown>
            <maxRotVelocity>800</maxRotVelocity>
            <motorConstant>1.1e-05</motorConstant>
            <momentConstant>0.0024</momentConstant>
            <rotorDragCoefficient>0.0</rotorDragCoefficient>
            <rollingMomentCoefficient>0.0</rollingMomentCoefficient>
            <commandSubTopic>/gazebo/command/uuv01/motor_speed</commandSubTopic>
            <motorNumber>0</motorNumber>
            <motorSpeedPubTopic>/motor_speed/0</motorSpeedPubTopic>
            <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
        </plugin>
        <plugin name='uuv01/top_starboard_motor_model' filename='libgazebo_motor_model.so'>
            <robotNamespace />
            <reversible>true</reversible>
            <jointName>uuv01/rotor_1_joint</jointName>
            <linkName>uuv01/rotor_1</linkName>
            <turningDirection>cw</turningDirection>
            <timeConstantUp>0.0125</timeConstantUp>
            <timeConstantDown>0.025</timeConstantDown>
            <maxRotVelocity>800</maxRotVelocity>
            <motorConstant>-1.1e-05</motorConstant>
            <momentConstant>0.0024</momentConstant>
            <rotorDragCoefficient>0.0</rotorDragCoefficient>
            <rollingMomentCoefficient>0.0</rollingMomentCoefficient>
            <commandSubTopic>/gazebo/command/uuv01/motor_speed</commandSubTopic>
            <motorNumber>1</motorNumber>
            <motorSpeedPubTopic>/motor_speed/1</motorSpeedPubTopic>
            <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
        </plugin>
        <plugin name='uuv01/bottom_starboard_motor_model' filename='libgazebo_motor_model.so'>
            <robotNamespace />
            <reversible>true</reversible>
            <jointName>uuv01/rotor_2_joint</jointName>
            <linkName>uuv01/rotor_2</linkName>
            <turningDirection>ccw</turningDirection>
            <timeConstantUp>0.0125</timeConstantUp>
            <timeConstantDown>0.025</timeConstantDown>
            <maxRotVelocity>800</maxRotVelocity>
            <motorConstant>1.1e-05</motorConstant>
            <momentConstant>0.0024</momentConstant>
            <rotorDragCoefficient>0.0</rotorDragCoefficient>
            <rollingMomentCoefficient>0.0</rollingMomentCoefficient>
            <commandSubTopic>/gazebo/command/uuv01/motor_speed</commandSubTopic>
            <motorNumber>2</motorNumber>
            <motorSpeedPubTopic>/motor_speed/2</motorSpeedPubTopic>
            <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
        </plugin>
        <plugin name='uuv01/bottom_port_motor_model' filename='libgazebo_motor_model.so'>
            <robotNamespace />
            <reversible>true</reversible>
            <jointName>uuv01/rotor_3_joint</jointName>
            <linkName>uuv01/rotor_3</linkName>
            <turningDirection>cw</turningDirection>
            <timeConstantUp>0.0125</timeConstantUp>
            <timeConstantDown>0.025</timeConstantDown>
            <maxRotVelocity>800</maxRotVelocity>
            <motorConstant>-1.1e-05</motorConstant>
            <momentConstant>0.0024</momentConstant>
            <rotorDragCoefficient>0.0</rotorDragCoefficient>
            <rollingMomentCoefficient>0.0</rollingMomentCoefficient>
            <commandSubTopic>/gazebo/command/uuv01/motor_speed</commandSubTopic>
            <motorNumber>3</motorNumber>
            <motorSpeedPubTopic>/motor_speed/3</motorSpeedPubTopic>
            <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
        </plugin>

        <plugin name='uuv01/magnetometer_plugin' filename='libgazebo_magnetometer_plugin.so'>
            <robotNamespace />
            <pubRate>100</pubRate>
            <noiseDensity>0.0004</noiseDensity>
            <randomWalk>6.4e-06</randomWalk>
            <biasCorrelationTime>600</biasCorrelationTime>
            <magTopic>uuv01/mag</magTopic>
        </plugin>

        <plugin name='uuv01/barometer_plugin' filename='libgazebo_barometer_plugin.so'>
            <robotNamespace />
            <pubRate>50</pubRate>
            <baroTopic>uuv01/baro</baroTopic>
        </plugin>

        <plugin name='uuv01/mavlink_interface' filename='libgazebo_mavlink_interface.so'>
            <robotNamespace />
            <imuSubTopic>uuv01/imu</imuSubTopic>
            <magSubTopic>uuv01/mag</magSubTopic>
            <baroSubTopic>uuv01/baro</baroSubTopic>
            <mavlink_addr>INADDR_ANY</mavlink_addr>
            <mavlink_udp_port>14561</mavlink_udp_port>
            <mavlink_tcp_port>4561</mavlink_tcp_port>
            <serialEnabled>0</serialEnabled>
            <serialDevice>/dev/ttyACM0</serialDevice>
            <baudRate>921600</baudRate>
            <qgc_addr>INADDR_ANY</qgc_addr>
            <qgc_udp_port>14550</qgc_udp_port>
            <sdk_addr>INADDR_ANY</sdk_addr>
            <sdk_udp_port>14540</sdk_udp_port>
            <hil_mode>false</hil_mode>
            <hil_state_level>false</hil_state_level>
            <send_vision_estimation>true</send_vision_estimation>
            <send_odometry>false</send_odometry>
            <enable_lockstep>true</enable_lockstep>
            <use_tcp>true</use_tcp>
            <motorSpeedCommandPubTopic>/gazebo/command/uuv01/motor_speed</motorSpeedCommandPubTopic>

            <!-- control channels, this way for every channel different settings can be realized -->
            <control_channels>
                <channel name='rotor1'>
                    <input_index>0</input_index>
                    <input_offset>0</input_offset>
                    <input_scaling>800</input_scaling>
                    <zero_position_disarmed>0</zero_position_disarmed>
                    <zero_position_armed>0</zero_position_armed>
                    <joint_control_type>velocity</joint_control_type>
                    <joint_name>top_port_motor_joint</joint_name>
                </channel>
                <channel name='rotor2'>
                    <input_index>1</input_index>
                    <input_offset>0</input_offset>
                    <input_scaling>800</input_scaling>
                    <zero_position_disarmed>0</zero_position_disarmed>
                    <zero_position_armed>0</zero_position_armed>
                    <joint_control_type>velocity</joint_control_type>
                    <joint_name>top_starboard_joint</joint_name>
                </channel>
                <channel name='rotor3'>
                    <input_index>2</input_index>
                    <input_offset>0</input_offset>
                    <input_scaling>800</input_scaling>
                    <zero_position_disarmed>0</zero_position_disarmed>
                    <zero_position_armed>0</zero_position_armed>
                    <joint_control_type>velocity</joint_control_type>
                    <joint_name>bottom_starboard_joint</joint_name>
                </channel>
                <channel name='rotor4'>
                    <input_index>3</input_index>
                    <input_offset>0</input_offset>
                    <input_scaling>800</input_scaling>
                    <zero_position_disarmed>0</zero_position_disarmed>
                    <zero_position_armed>0</zero_position_armed>
                    <joint_control_type>velocity</joint_control_type>
                    <joint_name>bottom_port_joint</joint_name>
                </channel>
            </control_channels>
        </plugin>

        <plugin name='uuv01/gazebo_imu_plugin' filename='libgazebo_imu_plugin.so'>
            <robotNamespace />
            <linkName>uuv01/imu_link</linkName>
            <imuTopic>uuv01/imu</imuTopic>
            <gyroscopeNoiseDensity>0.0003394</gyroscopeNoiseDensity>
            <gyroscopeRandomWalk>3.8785e-05</gyroscopeRandomWalk>
            <gyroscopeBiasCorrelationTime>1000.0</gyroscopeBiasCorrelationTime>
            <gyroscopeTurnOnBiasSigma>0.0087</gyroscopeTurnOnBiasSigma>
            <accelerometerNoiseDensity>0.004</accelerometerNoiseDensity>
            <accelerometerRandomWalk>0.006</accelerometerRandomWalk>
            <accelerometerBiasCorrelationTime>300.0</accelerometerBiasCorrelationTime>
            <accelerometerTurnOnBiasSigma>0.196</accelerometerTurnOnBiasSigma>
        </plugin>

        
        <!-- uuv 3 --> 
        <link name="uuv02/base_link">

            <pose>-0.5 0 0 0 0 0</pose>
            <inertial>
                <pose>0 0 0 0 0 0</pose>
                <!--
            These values are a compromise between the dry mass and added mass
            values used to correct for hydrodynamic effects.
            Real values:  m = 1,47 kg; Ixx = 0,002408 kgm2; Iyy = Izz = 0.010717 kgm2
                        Xu = -1,11 kg; Yv = Zw = -2,8 kg; Kp = -0,00451 kgm2; Mq = Nr = -0,0163 kgm2

            No gravity since weight and draft force are assumed to be equal for the hippocampus uuv
        -->
                <mass>1.47</mass>
                <inertia>
                    <ixx>0.0024</ixx>
                    <ixy>0</ixy>
                    <ixz>0</ixz>
                    <iyy>0.010717</iyy>
                    <iyz>0</iyz>
                    <izz>0.010717</izz>
                </inertia>
            </inertial>
            <visual name="uuv02/base_link_inertia_visual">
                <pose>0 0 0 0 0 0</pose>
                <geometry>
                    <mesh>
                        <scale>1 1 1</scale>
                        <uri>model://uuv_hippocampus/meshes/uuv_hippocampus.stl</uri>
                    </mesh>
                </geometry>
                <material>
                    <script>
                        <name>Gazebo/Grey</name>
                        <uri>file://media/materials/scripts/gazebo.material</uri>
                    </script>
                </material>
            </visual>
            <velocity_decay />
        </link>

        <!-- Water baro plugin doesn't work currently? -->
        <!-- <link name="uuv02/barometer_water_link">
            <pose>0 0 -0.05 0 0 0</pose>
            <inertial>
                <mass>0.001</mass>
                <inertia>
                    <ixx>1e-8</ixx>
                    <ixy>0</ixy>
                    <ixz>0</ixz>
                    <iyy>1e-8</iyy>
                    <iyz>0</iyz>
                    <izz>1e-8</izz>
                </inertia>
            </inertial>
            <visual name="uuv02/barometer_water_visual">
                <geometry>
                    <cylinder>
                        <radius>0.0125</radius>
                        <length>0.02</length>
                    </cylinder>
                </geometry>
                <material>
                    <script>
                        <uri>file://media/materials/scripts/gazebo.material</uri>
                        <name>Gazebo/Orange</name>
                    </script>
                </material>
            </visual>
        </link> -->
        
        <!-- <plugin name="uuv02/baro_water" filename="libgazebo_barometer_water_plugin.so">
            <pubRate>50</pubRate>
            <baroTopic>baro</baroTopic>
            <noise>100</noise>
        </plugin> -->

        <!-- <joint name="uuv02/barometer_water_joint" type="fixed">
            <parent>uuv02/base_link</parent>
            <child>uuv02/barometer_water_link</child>
        </joint> -->

        <!-- <link name="uuv02/vertical_camera/camera_link">
            <gravity>0</gravity>
            <pose>0.05 0 -0.02 0 1.57 0</pose>
            <inertial>
                <mass>0.001</mass>
                <inertia>
                    <ixx>1e-8</ixx>
                    <ixy>0</ixy>
                    <ixz>0</ixz>
                    <iyy>1e-8</iyy>
                    <iyz>0</iyz>
                    <izz>1e-8</izz>
                </inertia>
            </inertial>
            <sensor type="camera" name="camera_3">
                <update_rate>30.0</update_rate>
                <visualize>true</visualize>
                <always_on>0</always_on>
                <camera name="head">
                    <horizontal_fov>2.0</horizontal_fov>
                    <image>
                        <width>640</width>
                        <height>480</height>
                        <format>R8G8B8</format>
                    </image>
                    <clip>
                        <near>0.08</near>
                        <far>300</far>
                    </clip>
                    <noise>
                        <type>gaussian</type>
                        <mean>0.0</mean>
                        <stddev>0.1</stddev>
                    </noise>
                </camera>
                <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
                    <alwaysOn>false</alwaysOn>
                    <updateRate>0</updateRate>
                    <cameraName>vertical_camera</cameraName>
                    <imageTopicName>image_raw</imageTopicName>
                    <cameraInfoTopicName>camera_info</cameraInfoTopicName>
                    <frameName>vertical_camera/camera_frame</frameName>
                    <hackBaseline>0</hackBaseline>
                    <distortionK1>0.0</distortionK1>
                    <distortionK2>0.0</distortionK2>
                    <distortionK3>0.0</distortionK3>
                    <distortionT1>0.0</distortionT1>
                    <distortionT2>0.0</distortionT2>
                </plugin>
            </sensor>
        </link>

        <joint name="uuv02/camera_joint" type="fixed">
            <parent>uuv02/base_link</parent>
            <child>uuv02/vertical_camera/camera_link</child>
        </joint> -->

        <!--
        A new link is defined which hold the IMU (e.g. acceleration sensors, ...). For the simulation it is positioned
        at the center of the Hippocampus.
        The orientation of the IMU is chosen in regard to the orientation of the Body coordinate system of the
        HippoCampus. PX4 uses the data from the IMU to calculate the orientation. Therefore PX4 assumes a NED (North-
        East-Down) coordinate frame whereas Gazebo uses a ENU (East-North-Up) coordinate frame.
    -->
        <!-- IMU link -->
        <link name='uuv02/imu_link'>
            <pose relative_to="uuv02/base_link">0 0 0 0 0 0</pose>
            <inertial>
                <pose>0 0 0 0 0 0</pose>
                <mass>0.015</mass>
                <inertia>
                    <ixx>1e-05</ixx>
                    <ixy>0</ixy>
                    <ixz>0</ixz>
                    <iyy>1e-05</iyy>
                    <iyz>0</iyz>
                    <izz>1e-05</izz>
                </inertia>
            </inertial>
        </link>

        <!-- IMU joint -->
        <joint name='uuv02/imu_joint' type='revolute'>
            <child>uuv02/imu_link</child>
            <parent>uuv02/base_link</parent>
            <axis>
                <xyz>1 0 0</xyz>
                <limit>
                    <lower>0</lower>
                    <upper>0</upper>
                    <effort>0</effort>
                    <velocity>0</velocity>
                </limit>
                <dynamics>
                    <spring_reference>0</spring_reference>
                    <spring_stiffness>0</spring_stiffness>
                </dynamics>
                <use_parent_model_frame>1</use_parent_model_frame> <!-- in older sdf versions, the axis unit vector was expressed in the parent link's model frame, now it is expressed in joint frame, this tag replicates old behaviour -->
            </axis>
        </joint>

        <!--
    Now the rotors are defined on which the forces and moments attack. They are positioned relative to the center
    of the Hippocampus. Also a collision cylinder will be defined for each rotor to reduce computation time.
-->
        <!-- CCW 1-->
        <!-- rotor_0 link -->
        <link name='uuv02/rotor_0'>
            <pose relative_to="uuv02/base_link">-0.05 0.0481 0.0481 0 1.570796 0</pose>
            <inertial>
                <pose>0 0 0 0 -0 0</pose>
                <mass>0.005</mass>
                <inertia>
                    <ixx>9.75e-07</ixx>
                    <ixy>0</ixy>
                    <ixz>0</ixz>
                    <iyy>0.000273104</iyy>
                    <iyz>0</iyz>
                    <izz>0.000274004</izz>
                </inertia>
            </inertial>
            <visual name='uuv02/rotor_0_visual'>
                <pose>0 0 0 0 -1.570796 0</pose>
                <geometry>
                    <mesh>
                        <scale>1 1 1</scale>
                        <uri>model://uuv_hippocampus/meshes/uuv_hippocampus_prop.stl</uri>
                    </mesh>
                </geometry>
                <material>
                    <script>
                        <name>Gazebo/Red</name>
                        <uri>file://media/materials/scripts/gazebo.material</uri>
                    </script>
                </material>
            </visual>
            <velocity_decay />
        </link>

        <!-- rotor_0 joint -->
        <joint name='uuv02/rotor_0_joint' type='revolute'>
            <parent>uuv02/base_link</parent>
            <child>uuv02/rotor_0</child>
            <axis>
                <xyz>1 0 0</xyz>
                <limit>
                    <lower>-1e+16</lower>
                    <upper>1e+16</upper>
                </limit>
                <dynamics>
                    <spring_reference>0</spring_reference>
                    <spring_stiffness>0</spring_stiffness>
                </dynamics>
                <use_parent_model_frame>1</use_parent_model_frame>
            </axis>
        </joint>

        <!-- CW 2 -->
        <!-- rotor_1 link -->
        <link name='uuv02/rotor_1'>
            <pose relative_to="uuv02/base_link">-0.05 -0.0481 0.0481 0 1.570796 0</pose>
            <inertial>
                <pose>0 0 0 0 -0 0</pose>
                <mass>0.005</mass>
                <inertia>
                    <ixx>9.75e-07</ixx>
                    <ixy>0</ixy>
                    <ixz>0</ixz>
                    <iyy>0.000273104</iyy>
                    <iyz>0</iyz>
                    <izz>0.000274004</izz>
                </inertia>
            </inertial>
            <visual name='uuv02/rotor_1_visual'>
                <pose>0 0 0 0 -1.570796 0</pose>
                <geometry>
                    <mesh>
                        <scale>1 1 1</scale>
                        <uri>model://uuv_hippocampus/meshes/uuv_hippocampus_prop.stl</uri>
                    </mesh>
                </geometry>
                <material>
                    <script>
                        <name>Gazebo/Green</name>
                        <uri>file://media/materials/scripts/gazebo.material</uri>
                    </script>
                </material>
            </visual>
            <velocity_decay />
        </link>

        <!-- rotor_1 joint -->
        <joint name='uuv02/rotor_1_joint' type='revolute'>
            <child>uuv02/rotor_1</child>
            <parent>uuv02/base_link</parent>
            <axis>
                <xyz>1 0 0</xyz>
                <limit>
                    <lower>-1e+16</lower>
                    <upper>1e+16</upper>
                </limit>
                <dynamics>
                    <spring_reference>0</spring_reference>
                    <spring_stiffness>0</spring_stiffness>
                </dynamics>
                <use_parent_model_frame>1</use_parent_model_frame>
            </axis>
        </joint>

        <!-- CCW 3 -->
        <!-- rotor_2 link -->
        <link name='uuv02/rotor_2'>
            <pose relative_to="uuv02/base_link">-0.05 -0.0481 -0.0481 0 1.570796 0</pose>
            <inertial>
                <pose>0 0 0 0 -0 0</pose>
                <mass>0.005</mass>
                <inertia>
                    <ixx>9.75e-07</ixx>
                    <ixy>0</ixy>
                    <ixz>0</ixz>
                    <iyy>0.000273104</iyy>
                    <iyz>0</iyz>
                    <izz>0.000274004</izz>
                </inertia>
            </inertial>
            <visual name='uuv02/rotor_2_visual'>
                <pose>0 0 0 0 -1.570796 0</pose>
                <geometry>
                    <mesh>
                        <scale>1 1 1</scale>
                        <uri>model://uuv_hippocampus/meshes/uuv_hippocampus_prop.stl</uri>
                    </mesh>
                </geometry>
                <material>
                    <script>
                        <name>Gazebo/Blue</name>
                        <uri>file://media/materials/scripts/gazebo.material</uri>
                    </script>
                </material>
            </visual>
            <velocity_decay />
        </link>

        <!-- rotor_2 joint -->
        <joint name='uuv02/rotor_2_joint' type='revolute'>
            <child>uuv02/rotor_2</child>
            <parent>uuv02/base_link</parent>
            <axis>
                <xyz>1 0 0</xyz>
                <limit>
                    <lower>-1e+16</lower>
                    <upper>1e+16</upper>
                </limit>
                <dynamics>
                    <spring_reference>0</spring_reference>
                    <spring_stiffness>0</spring_stiffness>
                </dynamics>
                <use_parent_model_frame>1</use_parent_model_frame>
            </axis>
        </joint>

        <!-- CW 4 -->
        <!-- rotor_3 link -->
        <link name='uuv02/rotor_3'>
            <pose relative_to="uuv02/base_link">-0.05 0.0481 -0.0481 0 1.570796 0</pose>
            <inertial>
                <pose>0 0 0 0 -0 0</pose>
                <mass>0.005</mass>
                <inertia>
                    <ixx>9.75e-07</ixx>
                    <ixy>0</ixy>
                    <ixz>0</ixz>
                    <iyy>0.000273104</iyy>
                    <iyz>0</iyz>
                    <izz>0.000274004</izz>
                </inertia>
            </inertial>
            <visual name='uuv02/rotor_3_visual'>
                <pose>0 0 0 0 -1.570796 0</pose>
                <geometry>
                    <mesh>
                        <scale>1 1 1</scale>
                        <uri>model://uuv_hippocampus/meshes/uuv_hippocampus_prop.stl</uri>
                    </mesh>
                </geometry>
                <material>
                    <script>/rotor_${number}
                        <name>Gazebo/Blue</name>
                        <uri>file://media/materials/scripts/gazebo.material</uri>
                    </script>
                </material>
            </visual>
            <velocity_decay />
        </link>

        <!-- rotor_3 joint -->
        <joint name='uuv02/rotor_3_joint' type='revolute'>
            <child>uuv02/rotor_3</child>
            <parent>uuv02/base_link</parent>
            <axis>
                <xyz>1 0 0</xyz>
                <limit>
                    <lower>-1e+16</lower>
                    <upper>1e+16</upper>
                </limit>
                <dynamics>
                    <spring_reference>0</spring_reference>
                    <spring_stiffness>0</spring_stiffness>
                </dynamics>
                <use_parent_model_frame>1</use_parent_model_frame>
            </axis>
        </joint>

        <!-- GPS -->
        <!-- <include>
            <uri>model://gps</uri>
            <pose>0 0 0 0 0 0</pose>
            <name>gps</name>
        </include>
        <joint name='gps_joint' type='fixed'>
            <child>gps::link</child>
            <parent>base_link</parent>
        </joint> -->

        <!-- Plugins -->

        <plugin name="ground_truth/uuv02" filename="libgazebo_ros_p3d.so">
            <alwaysOn>true</alwaysOn>
            <updateRate>30.0</updateRate>
            <bodyName>uuv02/base_link</bodyName>
            <topicName>ground_truth/uuv02/state</topicName>
            <gaussianNoise>0.0</gaussianNoise>
            <frameName>map</frameName>
            <xyzOffsets>0 0 0</xyzOffsets>
            <rpyOffsets>0 0 0</rpyOffsets>
        </plugin>

        <plugin name='uuv02/groundtruth_plugin' filename='libgazebo_groundtruth_plugin.so'>
            <robotNamespace />
        </plugin>

        <plugin name='uuv02/uuv_forces' filename='libgazebo_uuv_plugin.so'>
            <buoyancy>
                <link_name>uuv02/base_link</link_name>
                <origin>0 0 0.01</origin>
                <compensation>1.01</compensation>
                <height_scale_limit>0.05</height_scale_limit>
            </buoyancy>
            <robotNamespace />
            <baseLinkName>uuv02/base_link</baseLinkName>
            <addedMassLinear>1.11 2.8 2.8</addedMassLinear>
            <addedMassAngular>0.00451 0.0163 0.0163</addedMassAngular>
            <dampingLinear>5.39 17.36 17.36</dampingLinear>
            <dampingAngular>0.00114 0.007 0.007</dampingAngular>
            <commandSubTopic>/gazebo/command/uuv02/motor_speed</commandSubTopic>
        </plugin>

        <plugin name='uuv02/top_port_motor_model' filename='libgazebo_motor_model.so'>
            <robotNamespace />
            <reversible>true</reversible>
            <jointName>uuv02/rotor_0_joint</jointName>
            <linkName>uuv02/rotor_0</linkName>
            <turningDirection>ccw</turningDirection>
            <timeConstantUp>0.0125</timeConstantUp>
            <timeConstantDown>0.025</timeConstantDown>
            <maxRotVelocity>800</maxRotVelocity>
            <motorConstant>1.1e-05</motorConstant>
            <momentConstant>0.0024</momentConstant>
            <rotorDragCoefficient>0.0</rotorDragCoefficient>
            <rollingMomentCoefficient>0.0</rollingMomentCoefficient>
            <commandSubTopic>/gazebo/command/uuv02/motor_speed</commandSubTopic>
            <motorNumber>0</motorNumber>
            <motorSpeedPubTopic>/motor_speed/0</motorSpeedPubTopic>
            <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
        </plugin>
        <plugin name='uuv02/top_starboard_motor_model' filename='libgazebo_motor_model.so'>
            <robotNamespace />
            <reversible>true</reversible>
            <jointName>uuv02/rotor_1_joint</jointName>
            <linkName>uuv02/rotor_1</linkName>
            <turningDirection>cw</turningDirection>
            <timeConstantUp>0.0125</timeConstantUp>
            <timeConstantDown>0.025</timeConstantDown>
            <maxRotVelocity>800</maxRotVelocity>
            <motorConstant>-1.1e-05</motorConstant>
            <momentConstant>0.0024</momentConstant>
            <rotorDragCoefficient>0.0</rotorDragCoefficient>
            <rollingMomentCoefficient>0.0</rollingMomentCoefficient>
            <commandSubTopic>/gazebo/command/uuv02/motor_speed</commandSubTopic>
            <motorNumber>1</motorNumber>
            <motorSpeedPubTopic>/motor_speed/1</motorSpeedPubTopic>
            <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
        </plugin>
        <plugin name='uuv02/bottom_starboard_motor_model' filename='libgazebo_motor_model.so'>
            <robotNamespace />
            <reversible>true</reversible>
            <jointName>uuv02/rotor_2_joint</jointName>
            <linkName>uuv02/rotor_2</linkName>
            <turningDirection>ccw</turningDirection>
            <timeConstantUp>0.0125</timeConstantUp>
            <timeConstantDown>0.025</timeConstantDown>
            <maxRotVelocity>800</maxRotVelocity>
            <motorConstant>1.1e-05</motorConstant>
            <momentConstant>0.0024</momentConstant>
            <rotorDragCoefficient>0.0</rotorDragCoefficient>
            <rollingMomentCoefficient>0.0</rollingMomentCoefficient>
            <commandSubTopic>/gazebo/command/uuv02/motor_speed</commandSubTopic>
            <motorNumber>2</motorNumber>
            <motorSpeedPubTopic>/motor_speed/2</motorSpeedPubTopic>
            <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
        </plugin>
        <plugin name='uuv02/bottom_port_motor_model' filename='libgazebo_motor_model.so'>
            <robotNamespace />
            <reversible>true</reversible>
            <jointName>uuv02/rotor_3_joint</jointName>
            <linkName>uuv02/rotor_3</linkName>
            <turningDirection>cw</turningDirection>
            <timeConstantUp>0.0125</timeConstantUp>
            <timeConstantDown>0.025</timeConstantDown>
            <maxRotVelocity>800</maxRotVelocity>
            <motorConstant>-1.1e-05</motorConstant>
            <momentConstant>0.0024</momentConstant>
            <rotorDragCoefficient>0.0</rotorDragCoefficient>
            <rollingMomentCoefficient>0.0</rollingMomentCoefficient>
            <commandSubTopic>/gazebo/command/uuv02/motor_speed</commandSubTopic>
            <motorNumber>3</motorNumber>
            <motorSpeedPubTopic>/motor_speed/3</motorSpeedPubTopic>
            <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
        </plugin>

        <plugin name='uuv02/magnetometer_plugin' filename='libgazebo_magnetometer_plugin.so'>
            <robotNamespace />
            <pubRate>100</pubRate>
            <noiseDensity>0.0004</noiseDensity>
            <randomWalk>6.4e-06</randomWalk>
            <biasCorrelationTime>600</biasCorrelationTime>
            <magTopic>uuv02/mag</magTopic>
        </plugin>

        <plugin name='uuv02/barometer_plugin' filename='libgazebo_barometer_plugin.so'>
            <robotNamespace />
            <pubRate>50</pubRate>
            <baroTopic>uuv02/baro</baroTopic>
        </plugin>

        <plugin name='uuv02/mavlink_interface' filename='libgazebo_mavlink_interface.so'>
            <robotNamespace />
            <imuSubTopic>uuv02/imu</imuSubTopic>
            <magSubTopic>uuv02/mag</magSubTopic>
            <baroSubTopic>uuv02/baro</baroSubTopic>
            <mavlink_addr>INADDR_ANY</mavlink_addr>
            <mavlink_udp_port>14562</mavlink_udp_port>
            <mavlink_tcp_port>4562</mavlink_tcp_port>
            <serialEnabled>0</serialEnabled>
            <serialDevice>/dev/ttyACM0</serialDevice>
            <baudRate>921600</baudRate>
            <qgc_addr>INADDR_ANY</qgc_addr>
            <qgc_udp_port>14550</qgc_udp_port>
            <sdk_addr>INADDR_ANY</sdk_addr>
            <sdk_udp_port>14540</sdk_udp_port>
            <hil_mode>false</hil_mode>
            <hil_state_level>false</hil_state_level>
            <send_vision_estimation>true</send_vision_estimation>
            <send_odometry>false</send_odometry>
            <enable_lockstep>true</enable_lockstep>
            <use_tcp>true</use_tcp>
            <motorSpeedCommandPubTopic>/gazebo/command/uuv02/motor_speed</motorSpeedCommandPubTopic>

            <!-- control channels, this way for every channel different settings can be realized -->
            <control_channels>
                <channel name='rotor1'>
                    <input_index>0</input_index>
                    <input_offset>0</input_offset>
                    <input_scaling>800</input_scaling>
                    <zero_position_disarmed>0</zero_position_disarmed>
                    <zero_position_armed>0</zero_position_armed>
                    <joint_control_type>velocity</joint_control_type>
                    <joint_name>top_port_motor_joint</joint_name>
                </channel>
                <channel name='rotor2'>
                    <input_index>1</input_index>
                    <input_offset>0</input_offset>
                    <input_scaling>800</input_scaling>
                    <zero_position_disarmed>0</zero_position_disarmed>
                    <zero_position_armed>0</zero_position_armed>
                    <joint_control_type>velocity</joint_control_type>
                    <joint_name>top_starboard_joint</joint_name>
                </channel>
                <channel name='rotor3'>
                    <input_index>2</input_index>
                    <input_offset>0</input_offset>
                    <input_scaling>800</input_scaling>
                    <zero_position_disarmed>0</zero_position_disarmed>
                    <zero_position_armed>0</zero_position_armed>
                    <joint_control_type>velocity</joint_control_type>
                    <joint_name>bottom_starboard_joint</joint_name>
                </channel>
                <channel name='rotor4'>
                    <input_index>3</input_index>
                    <input_offset>0</input_offset>
                    <input_scaling>800</input_scaling>
                    <zero_position_disarmed>0</zero_position_disarmed>
                    <zero_position_armed>0</zero_position_armed>
                    <joint_control_type>velocity</joint_control_type>
                    <joint_name>bottom_port_joint</joint_name>
                </channel>
            </control_channels>
        </plugin>

        <plugin name='uuv02/gazebo_imu_plugin' filename='libgazebo_imu_plugin.so'>
            <robotNamespace />
            <linkName>uuv02/imu_link</linkName>
            <imuTopic>uuv02/imu</imuTopic>
            <gyroscopeNoiseDensity>0.0003394</gyroscopeNoiseDensity>
            <gyroscopeRandomWalk>3.8785e-05</gyroscopeRandomWalk>
            <gyroscopeBiasCorrelationTime>1000.0</gyroscopeBiasCorrelationTime>
            <gyroscopeTurnOnBiasSigma>0.0087</gyroscopeTurnOnBiasSigma>
            <accelerometerNoiseDensity>0.004</accelerometerNoiseDensity>
            <accelerometerRandomWalk>0.006</accelerometerRandomWalk>
            <accelerometerBiasCorrelationTime>300.0</accelerometerBiasCorrelationTime>
            <accelerometerTurnOnBiasSigma>0.196</accelerometerTurnOnBiasSigma>
        </plugin>
        <!-- ende hippo 3 -->


<!-- add joint between uuv1 baselink and uuv2, need fixed translation from here to uuv2 baselink-->
<joint name="joint_1" type="revolute">
    <pose relative_to="uuv00/base_link">-0.25 0 0 0 0 0</pose>
    <parent>uuv00/base_link</parent>
    <child>uuv01/base_link</child>
    <axis>
        <xyz>0 0 1</xyz>
        <limit>
            <lower>-1.57</lower>
            <upper>1.57</upper>
            <effort>0</effort>
            <velocity>0</velocity>
        </limit>
        <dynamics>
            <spring_reference>0</spring_reference>
            <spring_stiffness>0</spring_stiffness>
        </dynamics>
        <use_parent_model_frame>1</use_parent_model_frame>
    </axis>
</joint>


<!-- add joint between uuv2 baselink and uuv3, need fixed translation from here to uuv2 baselink-->
<joint name="joint_2" type="revolute">
    <pose relative_to="uuv01/base_link">-0.25 0 0 0 0 0</pose>
    <parent>uuv01/base_link</parent>
    <child>uuv02/base_link</child>
    <axis>
        <xyz>0 0 1</xyz>
        <limit>
            <lower>-1.57</lower>
            <upper>1.57</upper>
            <effort>0</effort>
            <velocity>0</velocity>
        </limit>
        <dynamics>
            <spring_reference>0</spring_reference>
            <spring_stiffness>0</spring_stiffness>
        </dynamics>
        <use_parent_model_frame>1</use_parent_model_frame>
    </axis>
</joint>

        <!-- joint state publisher -->
        <plugin name="joint_1_state_publisher" filename="libgazebo_ros_joint_state_publisher.so">
            <jointName>joint_1, joint_2</jointName>
            <updateRate>50</updateRate>
            <alwaysOn>true</alwaysOn>
        </plugin>
        <!-- <plugin name="joint_2_state_publisher" filename="libgazebo_ros_joint_state_publisher.so">
            <jointName>joint_2</jointName>
            <updateRate>30</updateRate>
            <alwaysOn>true</alwaysOn>
        </plugin> -->


    </model>
</sdf>
